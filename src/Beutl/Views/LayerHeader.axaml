<UserControl x:Class="Beutl.Views.LayerHeader"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:icons="using:FluentIcons.FluentAvalonia"
             xmlns:local="using:Beutl.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:vm="using:Beutl.ViewModels"
             Height="{Binding Height.Value}"
             HorizontalAlignment="Stretch"
             VerticalAlignment="Top"
             VerticalContentAlignment="Top"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:CompileBindings="True"
             x:DataType="vm:LayerHeaderViewModel"
             PositionY="{Binding PosY.Value}"
             mc:Ignorable="d">
    <Grid RowDefinitions="25,*">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" MinWidth="100" />
        </Grid.ColumnDefinitions>
        <Grid.Styles>
            <Style Selector="TextBox.custom">
                <Style.Resources>
                    <Thickness x:Key="TextControlBorderThemeThicknessFocused">0</Thickness>
                </Style.Resources>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="10,0,6,0" />
                <Setter Property="MinHeight" Value="{DynamicResource LayerHeight}" />
                <Setter Property="VerticalContentAlignment" Value="Center" />

                <Style Selector="^:pointerover /template/ Border#PART_BorderElement">
                    <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
                </Style>
            </Style>
        </Grid.Styles>
        <Border x:Name="border"
                CornerRadius="{DynamicResource ControlCornerRadius}"
                Cursor="SizeNorthSouth"
                PointerMoved="Border_PointerMoved"
                PointerPressed="Border_PointerPressed"
                PointerReleased="Border_PointerReleased">
            <Border.Styles>
                <Style Selector="Border:pointerover">
                    <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
                </Style>
            </Border.Styles>
            <icons:SymbolIcon VerticalAlignment="Center"
                              FontSize="14"
                              Symbol="ReOrderDotsVertical" />
        </Border>

        <ToggleButton Grid.Column="1"
                      Command="{Binding SwitchEnabledCommand}"
                      IsChecked="{Binding IsEnabled.Value, Mode=OneWay}"
                      Theme="{StaticResource VisibilityToggleButtonStyle}" />

        <ui:ColorPickerButton Grid.Column="2"
                              MinHeight="{DynamicResource LayerHeight}"
                              CustomPaletteColors="{StaticResource PaletteColors}"
                              FlyoutConfirmed="OnColorChanged"
                              IsAlphaEnabled="False"
                              UseColorPalette="True"
                              Color="{Binding Color.Value, Mode=OneWay}">
            <ui:ColorPickerButton.Styles>
                <Style Selector="ui|ColorPickerButton">
                    <Setter Property="Template">
                        <ControlTemplate>
                            <Button Name="ShowFlyoutButton"
                                    Padding="0"
                                    HorizontalContentAlignment="Stretch"
                                    BorderThickness="0"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Theme="{StaticResource TransparentButton}">
                                <Grid ColumnDefinitions="*,Auto">
                                    <Border MinWidth="18"
                                            MinHeight="18"
                                            Margin="5,4"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Background="{TemplateBinding Color, Converter={StaticResource ColorBrushConv}}"
                                            BorderBrush="{DynamicResource ColorPickerButtonOutline}"
                                            BorderThickness="1"
                                            CornerRadius="{TemplateBinding CornerRadius}" />

                                    <ui:SymbolIcon Grid.Column="1"
                                                   Margin="0,0,8,0"
                                                   HorizontalAlignment="Right"
                                                   FontSize="18"
                                                   Symbol="ChevronDown" />
                                </Grid>
                            </Button>
                        </ControlTemplate>
                    </Setter>
                </Style>
            </ui:ColorPickerButton.Styles>
        </ui:ColorPickerButton>

        <TextBox x:Name="NameTextBox"
                 Grid.Column="3"
                 Classes="custom"
                 InputMethod.IsInputMethodEnabled="True"
                 Text="{Binding Name.Value}" />

        <ItemsControl Grid.Row="1"
                      Grid.ColumnSpan="4"
                      ItemsSource="{Binding Inlines}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <local:InlineAnimationLayerHeader />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</UserControl>
